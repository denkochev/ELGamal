package elgamal

import (
	"testing"
)

func Test_BasicGeneratorParams(t *testing.T) {
	// Random 3780 bits number P that prime and (p-1)/2 is prime also!

	// p
	p := FromHex("58b24e74e15b45483db571d78ee01067481713697e4c2c0ef7b069eec3693ab4efc2b13625413c69602e5ac2c80ad84754ba7d9dd4c499d6f1043e9e93d30427aa71d2d6784a4e8e69465318c657dd6f593ae5f948d9b3275b545401ac094ed738cf5ae6bb0f642cbdefba37062b64261f583c34e1024b1a192fe5807df3d55a6fac1c3b8a28a3900b46fb01ce1a2fe9ed6eebad75ff0752594b808cb50e135ba8da2002301f7fd008ec57b9933ec1767ed4ea9384b3ebd74e98b6dc61ff8e52e53eacc55fe9b97dd54f17e7a3dc2b7bb3aee3d870202d83e447216bf3833aef3a5d4e8b1c250569cb8f373f8e5deb2748e4f8227a4ea7122483422da7705578c734683b620e12f4583d03d41369c3c732fdd94d0fc4824ff318ae2d85fbad4c4e1f037c4d102f0b185a76c2d949f3483b16a1711a35c0bc4afe4e75eb1040d7d40ff1a925671e27bdc779fe3d7889e8599a374395d83648cf91a75f5a858b8adf4278537fadc4e91a64432e0007f158073654839eb969a813b60f2f58b2aa15d4b16abfae48f42efa726f197b4dc5a8ef6d05651fffd571e440733405800b2f873c62553b39858ba07b57c481ca233e5d83773124996110f8164c83d4b967c3a0fdd7e05ccfd5e78bbfa771835dad85f2cab4ca3b2b540a3")
	// (p-1)/2
	p_min_1 := FromHex("2c59273a70ada2a41edab8ebc7700833a40b89b4bf2616077bd834f761b49d5a77e1589b12a09e34b0172d6164056c23aa5d3eceea624ceb78821f4f49e98213d538e96b3c25274734a3298c632beeb7ac9d72fca46cd993adaa2a00d604a76b9c67ad735d87b2165ef7dd1b8315b2130fac1e1a7081258d0c97f2c03ef9eaad37d60e1dc51451c805a37d80e70d17f4f6b775d6baff83a92ca5c0465a8709add46d1001180fbfe804762bdcc99f60bb3f6a7549c259f5eba74c5b6e30ffc729729f5662aff4dcbeeaa78bf3d1ee15bdd9d771ec381016c1f22390b5f9c19d779d2ea7458e1282b4e5c79b9fc72ef593a4727c113d2753891241a116d3b82abc639a341db107097a2c1e81ea09b4e1e3997eeca687e24127f98c5716c2fdd6a6270f81be268817858c2d3b616ca4f9a41d8b50b88d1ae05e257f273af588206bea07f8d492b38f13dee3bcff1ebc44f42ccd1ba1caec1b2467c8d3afad42c5c56fa13c29bfd6e2748d3221970003f8ac039b2a41cf5cb4d409db0797ac59550aea58b55fd7247a177d39378cbda6e2d477b682b28fffeab8f220399a02c00597c39e312a9d9cc2c5d03dabe240e5119f2ec1bb98924cb0887c0b2641ea5cb3e1d07eebf02e67eaf3c5dfd3b8c1aed6c2f9655a651d95aa051")

	// speed optimization
	// Create a channel to receive boolean results
	results := make(chan bool, 2)

	// Check p.ProbablyPrime in a goroutine
	go func() {
		results <- p.ProbablyPrime(2000)
	}()

	// Check p_min_1.ProbablyPrime in another goroutine
	go func() {
		results <- p_min_1.ProbablyPrime(2000)
	}()

	// Receive results from both goroutines
	isPPrime := <-results
	isPMin1Prime := <-results

	if !isPPrime || !isPMin1Prime {
		t.Errorf("P prime probability -> %t | (p-1)/2 prime probability -> %t", isPPrime, isPMin1Prime)
	}
}

/*
PASS
ok      elgamal/elgamal 45.105s
*/
